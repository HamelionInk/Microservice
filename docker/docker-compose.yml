version: '2.2'
services:
  database:
    image: postgres:latest
    ports:
      - "5443:5443"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "12345"
      POSTGRES_DB:       "test_database"
    volumes:
      - ./init_news.sql:/docker-entrypoint-initdb.d/1-init_news.sql
      - ./init_account.sql:/docker-entrypoint-initdb.d/1-init_account.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  configserver:
    image: alfa-project/config-server:0.0.1-SNAPSHOT
    build:
      context: ../config-server
      args:
        JAR_FILE: target/config-server-0.0.1-SNAPSHOT.jar
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "config-server"

  eurekaserver:
    image: alfa-project/eureka-server:0.0.1-SNAPSHOT
    build:
      context: ../eureka-server
      args:
        JAR_FILE: target/eureka-server-0.0.1-SNAPSHOT.jar
    ports:
      - "8070:8070"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eureka-server"

  gatewayserver:
    image: alfa-project/gateway-server:0.0.1-SNAPSHOT
    build:
      context: ../gateway-server
      args:
        JAR_FILE: target/gateway-server-0.0.1-SNAPSHOT.jar
    ports:
      - "8072:8072"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway-server"

  newsFeedMicroservice:
    image: alfa-project/news-feed-microservice:0.0.1-SNAPSHOT
    build:
      context: ../news-feed-microservice
      args:
        JAR_FILE: target/news-feed-microservice-0.0.1-SNAPSHOT.jar
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    ports:
      - "8180:8080"
    networks:
      - backend

  accountInfoMicroservice:
    image: alfa-project/account-info-microservice:0.0.1-SNAPSHOT
    build:
      context: ../account-info-microservice
      args:
        JAR_FILE: target/account-info-microservice-0.0.1-SNAPSHOT.jar
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      - backend

  keycloak:
    image: jboss/keycloak
    restart: always
    environment:
      KEYCLOAK_VERSION: 6.0.1
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - "8080:8080"
    networks:
      backend:
        aliases:
          - "keycloak"

networks:
  backend:
    driver: bridge