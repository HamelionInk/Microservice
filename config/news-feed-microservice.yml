spring:
  datasource:
    url: jdbc:postgresql://database:5432/test-database
    username: postgres
    password: '{cipher}686b55a71a971471f44257116065ee718d20bd843ab7e94baf0dd00b6487833c'
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eurekaserver:8070/eureka/

resilience4j.circuitbreaker:
    instances:
      newsFeedService:
        registerHealthIndicator: true
        ringBufferSizeInClosedState: 5
        ringBufferSizeInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 20
        minimumNumberOfCalls: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException

resilience4j.bulkhead:
  instances:
    bulkheadNewsFeedService:
      maxWaitDuration: 10ms
      maxConcurrentCalls: 20

resilience4J.thread-pool-bulkhead:
  instances:
    bulkheadNewsFeedService:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1
      keepAliveDuration: 20ms

resilience4J.retry:
  instances:
    retryNewsFeedService:
      maxRetryAttempts: 5
      waitDuration: 10000
      retry-exception:
        - java.util.concurrent.TimeoutException


management:
  health:
    circulitbreakers:
      enabled: true
    ratelimiters: true
  endpoints:
    health: always
    web:
      exposure:
        include: "*"